


source ~/.vimrc_utils

" highlight configuration
"
"

function! Init() 

    syntax match ConcealEnd "\\}" conceal

    syntax match ConcealHighlight "\\hl{" conceal
    syntax match ConcealRedText "\\red{" conceal
    syntax match ConcealInfoText "\\info{" conceal
    syntax match ConcealWarningText "\\warning{" conceal
    syntax match ConcealDangerText "\\danger{" conceal
    syntax match ConcealGoodText "\\good{" conceal
    syntax match ConcealNote "\\note{" conceal
    syntax match ConcealCommand "\\command{" conceal


    highlight HighlightTextColor guibg=Yellow guifg=Purple
    syntax region HighlightText start="\\hl{" end="\\}" keepend contains=ConcealHighlight,ConcealEnd
    highlight link HighlightText HighlightTextColor

    highlight RedTextColor guifg=#DF5446
    syntax region RedText start="\\red{" end="\\}" keepend contains=ConcealRedText,ConcealEnd
    highlight link  RedText RedTextColor

    highlight InfoTextColor guifg=Cyan
    syntax region InfoText start="\\info{" end="\\}" keepend contains=ConcealInfoText,ConcealEnd
    highlight link InfoText InfoTextColor

    highlight DangerTextColor guifg=Red
    syntax region DangerText start="\\danger{" end="\\}" keepend contains=ConcealDangerText,ConcealEnd
    highlight link DangerText DangerTextColor

    highlight WarningTextColor guifg=Orange
    syntax region WarningText start="\\warning{" end="\\}" keepend contains=ConcealWarningText,ConcealEnd
    highlight link WarningText WarningTextColor

    highlight GoodTextColor guifg=#91F975
    syntax region GoodText start="\\good{" end="\\}" keepend contains=ConcealGoodText,ConcealEnd
    highlight link GoodText GoodTextColor

    highlight NoteColor guifg=#85A2F8
    syntax region Note start="\\note{" end="\\}" keepend contains=ConcealNote,ConcealEnd
    highlight link Note NoteColor

    highlight CommandColor guibg=#1D516E guifg=#ABABAD
    syntax region Command start="\\command{" end="\\}" keepend contains=ConcealCommand,ConcealEnd
    highlight link Command CommandColor

endfunction


call Init()


function! InsertAround(textBefore, textAfter)
    call MoveToEndOfRegion()
    call InsertStringAfterCursor(a:textAfter)
    call MoveToStartOfRegion()
    call InsertStringBeforeCursor(a:textBefore)
endfunction


function! EscapeHtml()
    let ch = GetCharUnderCursor()
    let isEndOfLine = IsEndOfLine()

    let l:WriteFunc = ""

    if isEndOfLine
        let l:WriteFunc = function("InsertStringAfterCursor")
    else
        let l:WriteFunc = function("InsertStringBeforeCursor")
    endif
   
    normal! x

    if ch == '<'
        call l:WriteFunc("&lt;")
    elseif ch == '>'
        call l:WriteFunc("&gt;")
    elseif ch == '&'
        call l.WriteFunc("&amp;")
    endif

endfunction


function! HighlightText()
    call InsertAround("\\hl{", "\\}")
endfunction

function! RedText()
    call InsertAround("\\red{", "\\}")
endfunction

function! EmphasisText()
    call InsertAround("**", "**")
endfunction

function! DangerText()
    call InsertAround("\\danger{", "\\}")
endfunction

function! WarningText()
    call InsertAround("\\warning{", "\\}")
endfunction

function! GoodText()
    call InsertAround("\\good{", "\\}")
endfunction

function! InfoText()
    call InsertAround("\\info{", "\\}")
endfunction

function! CommandBlock()
    call InsertAround("\\command{", "\\}")
endfunction

function! NoteText()
    call InsertAround("\\note{", "\\}")
endfunction


function! InsertPreTag()
    call InsertAround("<pre>", "</pre>")
endfunction

function! XEdit()
    call YankSelectedRegion()
    let command = ":tabedit " . @0
    execute command
endfunction


function! OpenFileUnderCursor()
    call PressEsc()
    normal! viW<cr>
    call XEdit()
endfunction


function! Unformat()
    call YankSelectedRegion()
    call MoveToEndOfRegion()
    call append(GetLineNumber(), ["<<<", ">>>"])
    call MoveToNextLine()
    call MoveToNextLine()
    normal! P

    :silent execute "'<,'>s/\\\\hl{//ge"
    :silent execute "'<,'>s/\\\\red{//ge"
    :silent execute "'<,'>s/\\\\danger{//ge"
    :silent execute "'<,'>s/\\\\warning{//ge"
    :silent execute "'<,'>s/\\\\good{//ge"
    :silent execute "'<,'>s/\\\\info{//ge"
    :silent execute "'<,'>s/\\\\note{//ge"
    :silent execute "'<,'>s/\\\\command{//ge"
endfunction
    
function! ShowAll()
    set conceallevel=0
endfunction

function! Conceal()
    set conceallevel=3
endfunction

function! Generate(selectAll)
    if a:selectAll == 1
        normal! ggVGy
    else
        normal! gvy
    endif
    let command = ":vnew __TMP__" . strftime("%Y%m%d%H%M%S")
    execute command
    sleep 300m
    normal! ggVGd
    normal! P
endfunction


function! GenerateBlog()
    call Generate(1)
    :silent normal! ggVGy
    :silent execute ":'<,'>!genblog"
    normal! ggVGd
    :silent execute ":r /Users/Ruikun/workspace/Programs/tmp/transformed.log"

endfunction


function! AsOutputBlock()
    call MoveToEndOfRegion()
    call append(GetLineNumber(), ["@end-output"])
    call MoveToStartOfRegion()
    call append(GetLineNumber()-1, ["@output"])
endfunction


function! AsBlockBlock()
    call MoveToEndOfRegion()
    call append(GetLineNumber(), ["@end-block"])
    call MoveToStartOfRegion()
    call append(GetLineNumber()-1, ["@block"])
endfunction


function! DeleteHighlightedText()
    normal! f}F{ldt\
    normal! diW
endfunction



function! DiffTool()
    :silent execute ":'<,'> !difftool"
endfunction
